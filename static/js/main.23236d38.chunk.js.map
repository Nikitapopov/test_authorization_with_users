{"version":3,"sources":["components/Users/Users.module.sass","components/common/AuthBlock/AuthBlock.module.sass","components/Auth/AuthForm.module.sass","api/api.js","api/auth-api.js","redux/auth_reducer.js","api/user-api.js","redux/user_reducer.js","redux/redux.js","redux/selectors.js","components/Users/UserTable.js","components/Users/Users.js","utils/helpers/validateField.js","components/Auth/Login/LoginForm/LoginForm.js","components/Auth/Login/Login.js","utils/validate.js","utils/validationSchema.js","utils/helpers/openNotification.js","components/Auth/SignUp/SignUpForm/SignUpForm.js","components/Auth/SignUp/SignUp.js","components/common/AuthBlock/AuthBlock.js","components/Auth/Auth.js","App.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","headers","authAPI","username","password","passwordConfirmation","firstName","lastName","email","Promise","resolve","post","then","res","data","initialState","userId","isAuth","actions","type","payload","authReducer","state","action","userAPI","get","isUsersDownloaded","users","userReducer","rootReducer","combineReducers","auth","user","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","getIsAuth","getIsUsersDownloaded","getUsers","UserTable","searchText","searchedColumn","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","placeholder","value","onChange","e","target","onPressEnter","handleSearch","width","marginBottom","display","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","setState","handleResize","index","columns","nextColumns","this","props","Object","keys","map","key","column","defaultSortOrder","sorter","a","b","id","sortDirections","fixed","title","toUpperCase","slice","dataSource","bordered","pagination","position","rowKey","scroll","x","sticky","React","Component","Users","useSelector","dispatch","useDispatch","useEffect","className","s","user__container","touched","errors","LoginForm","values","handleChange","handleBlur","handleSubmit","isSubmitting","auth__top","name","onSubmit","Item","validateStatus","validateField","help","hasFeedback","prefix","UserOutlined","onBlur","auth__input","Password","LockOutlined","disabled","auth__buttonColor","auth__link","to","LoginWithFormik","withRouter","withFormik","enableReinitialize","mapPropsToValues","validate","isLogin","rules","length","forEach","validation","setSubmitting","history","push","displayName","Login","login","DisplayingErrorMessagesSchema","Yup","shape","max","required","min","matches","message","excludeEmptyString","oneOf","notification","description","SignUpForm","useState","success","setSuccess","auth__successBlock","InfoCircleTwoTone","initialValues","validationSchema","openNotification","isValid","MailOutlined","auth__Link","SignUpWithFormik","validateSchema","SignUp","signUp","AuthBlock","children","classname","cn","block","Auth","exact","path","component","App","AppContext","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.23236d38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Users_user__3uQ3G\",\"user__container\":\"Users_user__container__2aSsB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"AuthBlock_block__2praq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__14J6s\",\"auth__top\":\"AuthForm_auth__top__3C-pl\",\"auth__buttonColor\":\"AuthForm_auth__buttonColor__1M5LD\",\"auth__input\":\"AuthForm_auth__input__YtYD9\",\"auth__successBlock\":\"AuthForm_auth__successBlock__1Mxij\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'http://emphasoft-test-assignment.herokuapp.com/',\r\n    headers: {\r\n        'Authorization': 'Token 781bd9f1de084f4daa7ba2aa8a71a2eab855354e'\r\n    },\r\n});","import {instance} from './api';\r\n\r\nexport const authAPI = {\r\n    signUp({username, password, passwordConfirmation, firstName, lastName, email}) {\r\n        //?\r\n        return Promise.resolve({username, password,\r\n            passwordConfirmation, firstName, lastName, email});\r\n    },\r\n    login(username, password) {\r\n        username='test_super'\r\n        password='Nf<U4f<rDbtDxAPn'\r\n        return instance.post('api-token-auth/', {\r\n            username,\r\n            password\r\n        }).then(res => res.data);\r\n    },\r\n};","import {authAPI} from '../api/auth-api';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    username: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'auth/SET_IS_AUTH':\r\n        case 'auth/SET_USERNAME':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst actions = {\r\n    setIsAuth: (isAuth) =>\r\n        ({type: 'auth/SET_IS_AUTH', payload: {isAuth}}),\r\n    setUsername: (username) =>\r\n        ({type: 'auth/SET_USERNAME', payload: {username}}),\r\n}\r\n\r\nexport const signUp = (values) => async (dispatch) => {\r\n    let data = await authAPI.signUp(values);\r\n    if (data) {\r\n        dispatch(actions.setIsAuth(true));\r\n        dispatch(actions.setUsername(values.username));\r\n    } else {\r\n        dispatch(actions.setIsAuth(false));\r\n    }\r\n};\r\n\r\nexport const login = (username, password) => async (dispatch) => {\r\n    let data = await authAPI.login(username, password);\r\n    if (data) {\r\n        dispatch(actions.setIsAuth(true));\r\n        dispatch(actions.setUsername(username));\r\n    } else {\r\n        dispatch(actions.setIsAuth(false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import {instance} from './api';\r\n\r\nexport const userAPI = {\r\n    fetchUsers() {\r\n        return instance.get('api/v1/users/').then(res => res.data);\r\n    },\r\n};","import {userAPI} from '../api/user-api';\r\n\r\nlet initialState = {\r\n    isUsersDownloaded: false,\r\n    users: null,\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'user/SET_USERS':\r\n        case 'user/SET_IS_USERS_DOWNLOADED':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst actions = {\r\n    setUsers: (users) => ({type: 'user/SET_USERS', payload: {users}}),\r\n    setIsUsersDownloaded: (isUsersDownloaded) =>\r\n        ({type: 'user/SET_IS_USERS_DOWNLOADED', payload: {isUsersDownloaded}}),\r\n}\r\n\r\nexport const fetchUsers = () => async (dispatch) => {\r\n    let data = await userAPI.fetchUsers();\r\n    if (data) {\r\n        dispatch(actions.setUsers(data));\r\n        dispatch(actions.setIsUsersDownloaded(true));\r\n    }\r\n};\r\n\r\nexport default userReducer;","import {Action, applyMiddleware, combineReducers, compose, createStore} from 'redux'\r\nimport authReducer from './auth_reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport userReducer from './user_reducer';\r\n\r\nlet rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    form: formReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nwindow.__store__ = store\r\n\r\nexport default store","export const getIsAuth = (state) => state.auth.isAuth;\r\nexport const getIsUsersDownloaded = (state) => state.user.isUsersDownloaded;\r\nexport const getUsers = (state) => state.user.users;","import React from 'react';\r\nimport {Button, Input, Space, Table} from 'antd';\r\nimport {SearchOutlined} from '@ant-design/icons';\r\nimport Highlighter from 'react-highlight-words';\r\n\r\nexport class UserTable extends React.Component {\r\n    state = {\r\n        searchText: '',\r\n        searchedColumn: '',\r\n    };\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm, clearFilters}) => (\r\n            <div style={{padding: 8}}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{width: 188, marginBottom: 8, display: 'block'}}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined/>}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{width: 90}}>\r\n                        Reset\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{color: filtered ? '#1890ff' : undefined}}/>,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: text =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{backgroundColor: '#ffc069', padding: 0}}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({searchText: ''});\r\n    };\r\n    handleResize = index => (e, {size}) => {\r\n        this.setState(({columns}) => {\r\n            const nextColumns = [...columns];\r\n            nextColumns[index] = {\r\n                ...nextColumns[index],\r\n                width: size.width,\r\n            };\r\n            return {columns: nextColumns};\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let {users} = this.props;\r\n        let columns = Object.keys(users[0]).map(key => {\r\n            let column = {};\r\n            column.width = 120;\r\n            if (key === 'id') {\r\n                column = {\r\n                    defaultSortOrder: 'ascend',\r\n                    sorter: (a, b) => a.id - b.id,\r\n                    sortDirections: ['ascend', 'descend', 'ascend'],\r\n                    width: 50,\r\n                    fixed: 'left',\r\n                };\r\n            }\r\n            if (key === 'username') {\r\n                column = {\r\n                    width: 120,\r\n                    ...this.getColumnSearchProps('username'),\r\n                };\r\n            }\r\n            if (key === 'is_active') {\r\n                column = {\r\n                    width: 55,\r\n                };\r\n            }\r\n            column.title = key[0].toUpperCase() + key.slice(1);\r\n            column.dataIndex = key;\r\n            column.key = key;\r\n            return column;\r\n        });\r\n        return <Table columns={columns}\r\n                      dataSource={users}\r\n                      bordered\r\n                      title={() => 'User list'}\r\n                      size={'small'}\r\n                      pagination={{position: ['bottomCenter']}}\r\n                      rowKey=\"id\"\r\n                      scroll={{x: 900}}\r\n                      sticky\r\n        />;\r\n    }\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {getIsUsersDownloaded, getUsers} from '../../redux/selectors';\r\nimport {fetchUsers} from '../../redux/user_reducer';\r\nimport s from './Users.module.sass';\r\nimport {UserTable} from './UserTable';\r\n\r\nlet Users = (props) => {\r\n    const isUsersDownloaded = useSelector(getIsUsersDownloaded);\r\n    const users = useSelector(getUsers);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchUsers());\r\n    }, []);\r\n\r\n    return (\r\n        <section className={s.user}>\r\n            <div className={s.user__container}>\r\n                {isUsersDownloaded &&\r\n                <UserTable users={users}/>\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Users;","export default (key, touched, errors) => {\r\n    if (touched[key]) {\r\n        if (errors[key]) {\r\n            return 'error';\r\n        } else {\r\n            return 'success';\r\n        }\r\n    } else {\r\n        return '';\r\n    }\r\n};","import React from 'react';\r\nimport {Button, Form, Input} from 'antd';\r\nimport {LockOutlined, UserOutlined} from '@ant-design/icons';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport s from '../../AuthForm.module.sass';\r\nimport validateField from '../../../../utils/helpers/validateField';\r\n\r\nlet LoginForm = props => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n            <div className={s.auth__top}>\r\n                <h2>Войти в аккаунт</h2>\r\n                <p>Пожалуйста, войдите в свой аккаунт</p>\r\n            </div>\r\n            <Form name=\"normal_login\"\r\n                  className=\"login-form\"\r\n                  onSubmit={handleSubmit}>\r\n                <Form.Item validateStatus={validateField('username', touched, errors)}\r\n                           help={!touched.username ? null : errors.username}\r\n                           hasFeedback={true}\r\n                >\r\n                    <Input id=\"username\"\r\n                           prefix={<UserOutlined size='large' className=\"site-form-item-icon\"/>}\r\n                           placeholder=\"Имя пользователя\"\r\n                           size='large'\r\n                           value={values.username}\r\n                           onChange={handleChange}\r\n                           onBlur={handleBlur}\r\n                           className={s.auth__input}/>\r\n                </Form.Item>\r\n                <Form.Item validateStatus={validateField('password', touched, errors)}\r\n                           help={!touched.password ? null : errors.password}\r\n                           hasFeedback\r\n                >\r\n                    <Input.Password\r\n                        id=\"password\"\r\n                        prefix={<LockOutlined size='large' className=\"site-form-item-icon\"/>}\r\n                        placeholder=\"Пароль\"\r\n                        size='large'\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={s.auth__input}/>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        disabled={isSubmitting}\r\n                        type='primary'\r\n                        size='large'\r\n                        className={s.auth__buttonColor}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n                </Form.Item>\r\n                <Link className={s.auth__link} to=\"/signup\">\r\n                    Зарегистрироваться\r\n                </Link>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {withRouter} from 'react-router';\r\nimport {withFormik} from 'formik';\r\n\r\nimport {login} from '../../../redux/auth_reducer';\r\nimport LoginForm from './LoginForm/LoginForm';\r\nimport validation from '../../../utils/validate';\r\n\r\nconst LoginWithFormik = withRouter(withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: () => ({\r\n        username: '',\r\n        password: ''\r\n    }),\r\n    validate: values => {\r\n        let errors = {};\r\n        validation({isAuth: false, values, errors});\r\n        return errors;\r\n    },\r\n    handleSubmit: async (values, {setSubmitting, props}) => {\r\n        await props.onSubmit(values.username, values.password);\r\n        setSubmitting(false);\r\n        props.history.push('/users');\r\n    },\r\n    displayName: 'LoginForm',\r\n})(LoginForm));\r\n\r\nlet Login = () => {\r\n    const dispatch = useDispatch();\r\n    const onSubmit = (username, password) =>\r\n        dispatch(login(username, password));\r\n\r\n    return <LoginWithFormik onSubmit={onSubmit}/>;\r\n};\r\n\r\nexport default Login;","export default ({isLogin, values, errors}) => {\r\n    const rules = {\r\n        username: value => {\r\n            if (!value) {\r\n                errors.username = 'Введите имя ползователя';\r\n            }\r\n            else if (value.length > 100)\r\n                errors.password = 'Слишком длинное имя пользователя'\r\n        },\r\n        lastName: value => {\r\n            if (!value) {\r\n                errors.username = 'Введите фамилию';\r\n            }\r\n            else if (value.length > 100)\r\n                errors.password = 'Слишком длинная фамилия'\r\n        },\r\n        firstName: value => {\r\n            if (!value) {\r\n                errors.username = 'Введите имя';\r\n            }\r\n            else if (value.length > 100)\r\n                errors.password = 'Слишком длинное имя'\r\n        },\r\n        password: value => {\r\n            if (!value)\r\n                errors.password = 'Введите пароль';\r\n            else if (value.length > 100)\r\n                errors.password = 'Слишком длинный пароль'\r\n            // else if (регулярное выражение)\r\n            //     errors.password = isLogin ? '' : 'Слишком простой пароль'\r\n        }\r\n    };\r\n\r\n    Object.keys(values).forEach(\r\n        key => rules[key] && rules[key](values[key]));\r\n};","import * as Yup from 'yup';\r\n\r\nconst DisplayingErrorMessagesSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n        .max(50, 'Слишком длинное имя пользователя')\r\n        .required('Введите имя пользователя'),\r\n    lastName: Yup.string()\r\n        .max(50, 'Слишком длинная фамилия')\r\n        .required('Введите фамилию'),\r\n    firstName: Yup.string()\r\n        .max(50, 'Слишком длинное имя')\r\n        .required('Введите имя'),\r\n    password: Yup.string()\r\n        .min(8, 'Слишком короткий пароль')\r\n        .max(50, 'Слишком длинный пароль')\r\n        .required('Введите пароль')\r\n        .matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/,\r\n            {message: 'Слишком легкий пароль', excludeEmptyString: true }),\r\n    passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Пароли должны совпадать')\r\n        .required('Введите пароль еще раз'),\r\n    email: Yup.string().email('Некорректный адрес почты').required('Введите электронную почту'),\r\n});\r\n\r\nexport default DisplayingErrorMessagesSchema;","import {notification} from 'antd';\r\n\r\nexport default ({text = '', type = 'info', title}) =>\r\n    notification[type]({\r\n        message: title,\r\n        description: text\r\n    });","import React, {useState} from 'react';\r\nimport {Form, Input, Button} from 'antd';\r\nimport {InfoCircleTwoTone, LockOutlined, UserOutlined, MailOutlined} from '@ant-design/icons';\r\nimport {Link} from 'react-router-dom';\r\nimport {Formik} from 'formik';\r\n\r\nimport s from '../../AuthForm.module.sass';\r\nimport validateField from '../../../../utils/helpers/validateField';\r\nimport validationSchema from '../../../../utils/validationSchema';\r\nimport openNotification from '../../../../utils/helpers/openNotification';\r\n\r\nlet SignUpForm = ({onSubmit}) => {\r\n    let [success, setSuccess] = useState(false);\r\n    return (\r\n        <>\r\n            {success ? (\r\n                <div className={s.auth__successBlock}>\r\n                    <InfoCircleTwoTone/>\r\n                    <h3>Подтвердите свой аккаунт</h3>\r\n                    <p>на вашу почту ПОКА ЕЩЕ НЕ отправлено письмо с ссылкой на подтверждение аккаунта.</p>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <div className={s.auth__top}>\r\n                        <h2>Регистрация</h2>\r\n                    </div>\r\n                    <Formik enableReinitialize={true}\r\n                            initialValues={{\r\n                                username: '',\r\n                                password: '',\r\n                                passwordConfirmation: '',\r\n                                email: '',\r\n                                firstName: '',\r\n                                lastName: ''\r\n                            }}\r\n                            validationSchema={validationSchema}\r\n                            onSubmit={async (values, {setSubmitting}) => {\r\n                                await onSubmit(values.username, values.password, values.firstName, values.lastName).then(() => {\r\n                                    openNotification({\r\n                                        title: 'Авторизация успешна!',\r\n                                        type: 'success'\r\n                                    });\r\n                                });\r\n                                setSuccess(true);\r\n                                setSubmitting(false);\r\n                            }}\r\n                    >\r\n                        {({\r\n                              values,\r\n                              touched,\r\n                              errors,\r\n                              handleChange,\r\n                              handleBlur,\r\n                              isValid,\r\n                              isSubmitting,\r\n                              onSubmit,\r\n                              handleSubmit\r\n                          }) => (\r\n                            <Form className=\"login-form\" onSubmit={onSubmit}>\r\n                                <Form.Item validateStatus={validateField('email', touched, errors)}\r\n                                           help={!touched.email ? null : errors.email}\r\n                                           hasFeedback={true}\r\n                                >\r\n                                    <Input id=\"email\"\r\n                                           prefix={<MailOutlined size='large' className=\"site-form-item-icon\"/>}\r\n                                           placeholder=\"Электронная почта\"\r\n                                           size='large'\r\n                                           value={values.email}\r\n                                           onChange={handleChange}\r\n                                           onBlur={handleBlur}\r\n                                           className={s.auth__input}/>\r\n                                </Form.Item>\r\n                                <Form.Item validateStatus={validateField('username', touched, errors)}\r\n                                           help={!touched.username ? null : errors.username}\r\n                                           hasFeedback={true}\r\n                                >\r\n                                    <Input id=\"username\"\r\n                                           prefix={<UserOutlined size='large' className=\"site-form-item-icon\"/>}\r\n                                           placeholder=\"Имя пользователя\"\r\n                                           size='large'\r\n                                           value={values.username}\r\n                                           onChange={handleChange}\r\n                                           onBlur={handleBlur}\r\n                                           className={s.auth__input}/>\r\n                                </Form.Item>\r\n                                <Form.Item validateStatus={validateField('lastName', touched, errors)}\r\n                                           help={!touched.lastName ? null : errors.lastName}\r\n                                           hasFeedback={true}\r\n                                >\r\n                                    <Input id=\"lastName\"\r\n                                           prefix={<UserOutlined size='large' className=\"site-form-item-icon\"/>}\r\n                                           placeholder=\"Фамилия\"\r\n                                           size='large'\r\n                                           value={values.lastName}\r\n                                           onChange={handleChange}\r\n                                           onBlur={handleBlur}\r\n                                           className={s.auth__input}/>\r\n                                </Form.Item>\r\n                                <Form.Item validateStatus={validateField('firstName', touched, errors)}\r\n                                           help={!touched.firstName ? null : errors.firstName}\r\n                                           hasFeedback={true}\r\n                                >\r\n                                    <Input id=\"firstName\"\r\n                                           prefix={<UserOutlined size='large' className=\"site-form-item-icon\"/>}\r\n                                           placeholder=\"Имя\"\r\n                                           size='large'\r\n                                           value={values.firstName}\r\n                                           onChange={handleChange}\r\n                                           onBlur={handleBlur}\r\n                                           className={s.auth__input}/>\r\n                                </Form.Item>\r\n                                <Form.Item validateStatus={validateField('password', touched, errors)}\r\n                                           help={!touched.password ? null : errors.password}\r\n                                           hasFeedback\r\n                                >\r\n                                    <Input.Password\r\n                                        id=\"password\"\r\n                                        prefix={<LockOutlined size='large' className=\"site-form-item-icon\"/>}\r\n                                        placeholder=\"Пароль\"\r\n                                        size='large'\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={s.auth__input}/>\r\n                                </Form.Item>\r\n                                <Form.Item validateStatus={validateField('passwordConfirmation', touched, errors)}\r\n                                           help={!touched.passwordConfirmation ? null : errors.passwordConfirmation}\r\n                                           hasFeedback\r\n                                >\r\n                                    <Input.Password\r\n                                        id=\"passwordConfirmation\"\r\n                                        prefix={<LockOutlined size='large' className=\"site-form-item-icon\"/>}\r\n                                        placeholder=\"Повторите пароль\"\r\n                                        size='large'\r\n                                        value={values.passwordConfirmation}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={s.auth__input}/>\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    <Button onClick={handleSubmit}\r\n                                            disabled={isSubmitting}\r\n                                            type='primary'\r\n                                            size='large'\r\n                                            className={s.auth__buttonColor}\r\n                                    >\r\n                                        Зарегистрироваться\r\n                                    </Button>\r\n                                </Form.Item>\r\n                                <Link className={s.auth__Link} to=\"/login\">\r\n                                    Войти\r\n                                </Link>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignUpForm;","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {withRouter} from 'react-router';\r\nimport {withFormik} from 'formik';\r\n\r\nimport SignUpForm from './SignUpForm/SignUpForm';\r\nimport {signUp} from '../../../redux/auth_reducer';\r\nimport validationSchema from '../../../utils/validationSchema';\r\n\r\nconst SignUpWithFormik = withRouter(withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: () => ({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        lastName: '',\r\n        firstName: '',\r\n        passwordConfirmation: '',\r\n    }),\r\n    validateSchema: validationSchema,\r\n    handleSubmit: async (values, {setSubmitting, props}) => {\r\n        await props.onSubmit(values);\r\n        setSubmitting(false);\r\n        props.history.push('/users');\r\n    },\r\n    displayName: 'LoginForm',\r\n})(SignUpForm));\r\n\r\nlet SignUp = () => {\r\n    const dispatch = useDispatch();\r\n    const onSubmit = (values) =>\r\n        dispatch(signUp(values));\r\n\r\n    return <SignUpWithFormik onSubmit={onSubmit}/>;\r\n};\r\n\r\nexport default SignUp;","import React from \"react\"\r\nimport s from './AuthBlock.module.sass'\r\nimport cn from 'classnames'\r\n\r\nlet AuthBlock = ({children, classname}) => {\r\n    return <div className={cn(s.block, classname)}>\r\n        {children}\r\n    </div>\r\n}\r\n\r\nexport default AuthBlock;","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport Login from './Login/Login';\r\nimport SignUp from './SignUp/SignUp';\r\nimport s from './AuthForm.module.sass';\r\nimport AuthBlock from '../common/AuthBlock/AuthBlock';\r\n\r\nconst Auth = () => {\r\n    return (\r\n        <div className={s.auth}>\r\n            <AuthBlock>\r\n                <Route exact path='/login' component={Login}/>\r\n                <Route exact path='/signup' component={SignUp}/>\r\n            </AuthBlock>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React from 'react';\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport { Provider, useSelector} from 'react-redux';\nimport store from './redux/redux';\nimport {getIsAuth} from './redux/selectors';\nimport Users from './components/Users/Users';\nimport Auth from './components/Auth/Auth';\n\nfunction App() {\n    const isAuth = useSelector(getIsAuth);\n    return (\n        <div className=\"wrapper\">\n            <Switch>\n                <Route exact path={['/login', '/signup']} component={Auth}/>\n                <Route exact path='/users' component={Users}/>\n                {/*<Route exact path='/users' render={() => (isAuth ? <Users/> : <Redirect to='/login'/>)}/>*/}\n                <Route path='/' render={() => (isAuth ? <Users/> : <Redirect to='/login'/>)}/>\n            </Switch>\n        </div>\n    );\n}\n\nconst AppContext = () => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>;\n};\n\nexport default AppContext;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.sass';\nimport App from './App';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);"],"sourceRoot":""}